// <auto-generated>
//   This file was generated by a tool; you should avoid making direct changes.
//   Consider using 'partial classes' to extend these types
//   Input: range.proto
// </auto-generated>

#region Designer generated code
#pragma warning disable CS0612, CS0618, CS1591, CS3021, CS8981, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
namespace bgs.protocol
{

    [global::ProtoBuf.ProtoContract()]
    public partial class UnsignedIntRange : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"min")]
        public ulong Min
        {
            get => __pbn__Min.GetValueOrDefault();
            set => __pbn__Min = value;
        }
        public bool ShouldSerializeMin() => __pbn__Min != null;
        public void ResetMin() => __pbn__Min = null;
        private ulong? __pbn__Min;

        [global::ProtoBuf.ProtoMember(2, Name = @"max")]
        public ulong Max
        {
            get => __pbn__Max.GetValueOrDefault();
            set => __pbn__Max = value;
        }
        public bool ShouldSerializeMax() => __pbn__Max != null;
        public void ResetMax() => __pbn__Max = null;
        private ulong? __pbn__Max;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class SignedIntRange : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"min")]
        public long Min
        {
            get => __pbn__Min.GetValueOrDefault();
            set => __pbn__Min = value;
        }
        public bool ShouldSerializeMin() => __pbn__Min != null;
        public void ResetMin() => __pbn__Min = null;
        private long? __pbn__Min;

        [global::ProtoBuf.ProtoMember(2, Name = @"max")]
        public long Max
        {
            get => __pbn__Max.GetValueOrDefault();
            set => __pbn__Max = value;
        }
        public bool ShouldSerializeMax() => __pbn__Max != null;
        public void ResetMax() => __pbn__Max = null;
        private long? __pbn__Max;

    }

    [global::ProtoBuf.ProtoContract()]
    public partial class FloatRange : global::ProtoBuf.IExtensible
    {
        private global::ProtoBuf.IExtension __pbn__extensionData;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            => global::ProtoBuf.Extensible.GetExtensionObject(ref __pbn__extensionData, createIfMissing);

        [global::ProtoBuf.ProtoMember(1, Name = @"min")]
        public float Min
        {
            get => __pbn__Min.GetValueOrDefault();
            set => __pbn__Min = value;
        }
        public bool ShouldSerializeMin() => __pbn__Min != null;
        public void ResetMin() => __pbn__Min = null;
        private float? __pbn__Min;

        [global::ProtoBuf.ProtoMember(2, Name = @"max")]
        public float Max
        {
            get => __pbn__Max.GetValueOrDefault();
            set => __pbn__Max = value;
        }
        public bool ShouldSerializeMax() => __pbn__Max != null;
        public void ResetMax() => __pbn__Max = null;
        private float? __pbn__Max;

    }

}

#pragma warning restore CS0612, CS0618, CS1591, CS3021, CS8981, IDE0079, IDE1006, RCS1036, RCS1057, RCS1085, RCS1192
#endregion
