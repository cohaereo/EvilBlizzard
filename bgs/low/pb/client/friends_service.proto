syntax = "proto2";

package bgs.protocol.friends.v1;

import "bgs/low/pb/client/attribute_types.proto";
import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/account_types.proto";
import "bgs/low/pb/client/friends_types.proto";
import "bgs/low/pb/client/invitation_types.proto";
import "bgs/low/pb/client/rpc_types.proto";

message SubscribeRequest {
	optional EntityId	agent_id	= 1;
	required uint64	object_id	= 2;
}

message UnsubscribeRequest {
	optional EntityId	agent_id	= 1;
	optional uint64	object_id	= 2;
}

message SendInvitationRequest {
	optional Identity	agent_identity	= 1;
	required EntityId	target_id	= 2;
	required InvitationParams	params	= 3;
}

message RevokeInvitationRequest {
	optional EntityId	agent_id	= 1;
	optional fixed64	invitation_id	= 2;
}

message AcceptInvitationRequest {
	optional EntityId	agent_id	= 1;
	required fixed64	invitation_id	= 3;
	optional AcceptInvitationOptions	options	= 4;
}

message DeclineInvitationRequest {
	optional EntityId	agent_id	= 1;
	required fixed64	invitation_id	= 3;
}

message IgnoreInvitationRequest {
	optional EntityId	agent_id	= 1;
	required fixed64	invitation_id	= 3;
}

message RemoveFriendRequest {
	optional EntityId	agent_id	= 1;
	required EntityId	target_id	= 2;
}

message RevokeAllInvitationsRequest {
	optional EntityId	agent_id	= 2;
}

message ViewFriendsRequest {
	optional EntityId	agent_id	= 1;
	required EntityId	target_id	= 2;
}

message ViewFriendsResponse {
	repeated FriendOfFriend	friends	= 1;
}

message UpdateFriendStateRequest {
	optional EntityId	agent_id	= 1;
	required EntityId	target_id	= 2;
	repeated Attribute	attribute	= 3;
}

message SetAttributeRequest {
	optional account.v1.AccountId	agent_id	= 1;
	optional account.v1.AccountId	target_id	= 2;
	repeated Attribute	attribute	= 3;
}

message GetFriendListRequest {
	optional EntityId	agent_id	= 2;
}

message GetFriendListResponse {
	repeated Friend	friends	= 1;
}

message CreateFriendshipRequest {
	optional EntityId	agent_id	= 1;
	optional EntityId	target_id	= 2;
	repeated uint32	role	= 3;
}

message FriendNotification {
	required Friend	target	= 1;
	optional EntityId	account_id	= 5;
}

message UpdateFriendStateNotification {
	required Friend	changed_friend	= 1;
	optional EntityId	account_id	= 5;
}

message InvitationNotification {
	required ReceivedInvitation	invitation	= 1;
	optional uint32	reason	= 3 [default = 0];
	optional EntityId	account_id	= 5;
}

message SentInvitationAddedNotification {
	optional EntityId	account_id	= 1;
	optional SentInvitation	invitation	= 2;
}

message SentInvitationRemovedNotification {
	optional EntityId	account_id	= 1;
	optional fixed64	invitation_id	= 2;
	optional uint32	reason	= 3;
}

service FriendsService {
	rpc Subscribe (SubscribeRequest) returns (SubscribeResponse) {}
	rpc SendInvitation (SendInvitationRequest) returns (NoData) {}
	rpc AcceptInvitation (AcceptInvitationRequest) returns (NoData) {}
	rpc RevokeInvitation (RevokeInvitationRequest) returns (NoData) {}
	rpc DeclineInvitation (DeclineInvitationRequest) returns (NoData) {}
	rpc IgnoreInvitation (IgnoreInvitationRequest) returns (NoData) {}
	rpc RemoveFriend (RemoveFriendRequest) returns (NoData) {}
	rpc ViewFriends (ViewFriendsRequest) returns (ViewFriendsResponse) {}
	rpc UpdateFriendState (UpdateFriendStateRequest) returns (NoData) {}
	rpc Unsubscribe (UnsubscribeRequest) returns (NoData) {}
	rpc RevokeAllInvitations (RevokeAllInvitationsRequest) returns (NoData) {}
	rpc GetFriendList (GetFriendListRequest) returns (GetFriendListResponse) {}
	rpc CreateFriendship (CreateFriendshipRequest) returns (NoData) {}
	rpc SetAttribute (SetAttributeRequest) returns (NoData) {}
}

service FriendsListener {
	rpc OnFriendAdded (FriendNotification) returns (NO_RESPONSE) {}
	rpc OnFriendRemoved (FriendNotification) returns (NO_RESPONSE) {}
	rpc OnReceivedInvitationAdded (InvitationNotification) returns (NO_RESPONSE) {}
	rpc OnReceivedInvitationRemoved (InvitationNotification) returns (NO_RESPONSE) {}
	rpc OnSentInvitationAdded (SentInvitationAddedNotification) returns (NO_RESPONSE) {}
	rpc OnSentInvitationRemoved (SentInvitationRemovedNotification) returns (NO_RESPONSE) {}
	rpc OnUpdateFriendState (UpdateFriendStateNotification) returns (NO_RESPONSE) {}
}

